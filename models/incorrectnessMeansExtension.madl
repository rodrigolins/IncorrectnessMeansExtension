import "platform:/plugin/org.qualitune.smags.architecture.dsl/resources/StandardTypes.madl";
import "../../SmagRE/models/AdaptationArchitecture.madl";
import "../../SmagRE/models/CommonLib.madl";

namespace "incorrectnessMeansExtension";

meta architecture IncorrectnessMeansExtensionMetaArchitecture{
	sensor units:

	type libraries:
	type library ArduinoSamplingDataTypes {
        complex ArduinoValue {
        	property id : Integer;
        	property sensorType : String;
        	property model : String;
        	property manufacturer : String;
        	property properties : List<ArduinoProperty>;
        }
        complex ArduinoProperty {
        	property name : String;
        	property value : Double;
        	property unit : String;
        }
    }
    
    type library SensorManagerDataTypes {
    	complex PropertyType {
    		property id : Long;
    		property name : String;
    	}
    	enum PropertyBoundary {
    		EQ,
    		GT,
    		LT,
    		DV
    	}
    	complex Property {
    		property id : Long;
    		property propertyType : PropertyType;
    		property value : Float;
    		property unit : String;
    		property boundary : PropertyBoundary;
    	}
    	complex SensorType {
    		property id : Long;
    		property name : String;
    	}
    	complex Sensor {
    		property id : Long;
    		property sensorType : SensorType;
    		property model : String;
    		property manufacturer : String;
    		property properties : List<Property>;
    		property rules : List<Rule>;
    	}
    	enum RuleBoundary {
    		IC,
    		DC,
    		DE
    	}
    	complex Rule {
    		property id : Long;
    		property propertyType : PropertyType;
    		property value : Float;
    		property unit : String;
    		property time : Long;
    		property boundary : RuleBoundary;
    		
    	}
    }

	port types:
	port type ISensorManagerSensorProvider {
		List<Sensor> getSensors();
	}
	
	port type IArduinoSamplingProvider {
		List<ArduinoValue> getArduinoSampling();
	}

	component types:
	component type SensorManagerPropertyRepository {
		provides ISensorManagerSensorProvider;
	}
	
	component type ArduinoSamplingRepository {
		provides IArduinoSamplingProvider;
	}
	
	component type ApplicationManager {
		requires ISensorManagerSensorProvider[0 to *];
		requires IArduinoSamplingProvider[0 to *];
	}

	sensor types:

}